buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "$mod_version"
group = "com.teamwizardry"
archivesBaseName = "wizardry"

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations.all {
    // check for updates every build
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

minecraft {
    version = "$mc_version-$forge_version"
    runDir = "run"
    mappings = "$mcp_version"

    clientJvmArgs = ["-Dfml.coreMods.load=$core_plugin"]
    serverJvmArgs = ["-Dfml.coreMods.load=$core_plugin"]
}

repositories {
    mavenCentral()
    maven { url = "http://maven.bluexin.be/repository/snapshots/" }
	maven { url = "http://dvs1.progwml6.com/files/maven" }
	maven { url = "http://tehnut.info/maven" }
	maven { url = "http://maven.tterrag.com/" }
}

dependencies {
	compile "com.teamwizardry.librarianlib:librarianlib-1.12:$liblib_version:deobf"
	deobfCompile "mezz.jei:jei_1.12:$jei_version:api"
	runtime "mezz.jei:jei_1.12:$jei_version"
	deobfCompile "mcp.mobius.waila:Hwyla:$hwyla_version"
	runtime "team.chisel.ctm:CTM:$ctm_version"
}


jar {
    manifest {
        attributes(
                "FMLCorePluginContainsFMLMod": "true",
                "FMLCorePlugin": "$core_plugin"
        )
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info', 'pack.mcmeta'

        // replace version and mcversion
        expand  'version': project.version,
                'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info', 'pack.mcmeta'
    }
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = compileJava.destinationDir
        testOutputDir = compileTestJava.destinationDir
    }
}
